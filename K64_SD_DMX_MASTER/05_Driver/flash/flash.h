//============================================================================
//文件名称：flash.h
//功能概要：K64 Flash擦除/写入底层驱动程序头文件
//版权所有：苏州大学飞思卡尔嵌入式中心(sumcu.suda.edu.cn)
//版本更新：2015-12-11  V1.0   初始版本
//       
//============================================================================

#ifndef _FLASH_H
#define _FLASH_H

//MK64FX512包含1M的程序Flash
//512KB的MK64FX512程序Flash分为128个扇区，每个扇区4K大小
//    sector（4k）为擦除最小单位
//    长字（64bit）为写的最小单位

#include "common.h"
#include "core_cm4.h"

// Flash控制器宏定义 ，内部使用
#define CCIF    (1<<7)
#define ACCERR  (1<<5)
#define FPVIOL  (1<<4)
#define MGSTAT0 (1<<0)


//Flash命令宏定义，内部使用
#define RD1BLK    0x00   // 读整块Flash
#define RD1SEC    0x01   // 读整个扇区
#define PGMCHK    0x02   // 写入检查
#define RDRSRC    0x03   // 读目标数据
#define PGM8      0x07   // 写入长字
#define ERSBLK    0x08   // 擦除整块Flash
#define ERSSCR    0x09   // 擦除Flash扇区
#define PGMSEC    0x0B   // 写入扇区
#define RD1ALL    0x40   // 读所有的块
#define RDONCE    0x41   // 只读一次
#define PGMONCE   0x43   // 只写一次
#define ERSALL    0x44   // 擦除所有块
#define VFYKEY    0x45   // 验证后门访问钥匙
#define SWAP      0x46   // 交换控制
#define PGMPART   0x80   // 写入分区
#define SETRAM    0x81   // 设定FlexRAM功能


//==========================================================================
//函数名称：flash_init
//函数返回：无
//参数说明：无
//功能概要：初始化flash模块
//==========================================================================
void flash_init();

//==========================================================================
//函数名称：flash_erase_sector
//函数返回：函数执行执行状态：0=正常；非0=异常。
//参数说明：sectorNo：扇区号（MK64FX512实际使用0~127）
//功能概要：擦除指定flash扇区
//==========================================================================
uint_8 flash_erase_sector(uint_16 sectorNo);

//==========================================================================
//函数名称：flash_write
//函数返回：函数执行状态：0=正常；非0=异常。
//参数说明：sectNo：目标扇区号 （MK64FX512实际使用0~127）
//         offset:写入扇区内部偏移地址（0~4087）
//         cnt：写入字节数目（0~4087）
//         buf：源数据缓冲区首地址
//功能概要：flash写入操作 
//==========================================================================
uint_8 flash_write(uint_16 sectNo,uint_16 offset,uint_16 cnt,uint_8 buf[]);


//==========================================================================
//函数名称：flash_protect
//函数返回：无
//参数说明：sectNo：保护扇区号（从0x0000地址开始）
//功能概要：flash保护操作
//说        明：进行扇区保护时，扇区保护的范围只能增加，不能减少；
//          128个扇区（0~127）平均分成32个区域，保护区域号（0~31），
//          每个区域包含4个扇区。例如，区域号0对应0~3扇区，区域号1对应4~7扇区。
//          四个八位寄存器共32位与32个区域一一对应，某位为1：不保护，为0：保护
//==========================================================================
void flash_protect(uint_8 sectNo);

#endif //_FLASH_H__
